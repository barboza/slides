.step.slide#numbers[data-x=x_succ data-y=0]
  q
    span Fixnums & Bignums & Floats 
    br
    small
      |são ... números

.step.slide.code[data-x=x_succ data-y=0]
  q
    pre
      code[class="ruby"]
        | age = 22
          age.class #Fixnum
          average = 7.5
          average.class #Float
          a_million = 1_000_000

.step.slide.code[data-x=x_succ data-y=0]
  q
    pre
      code[class="ruby"]
        | 22.to_f #22.0
          7.5.to_i #7

.step.slide.code[data-x=x_succ data-y=0]
  q
    pre
      code[class="ruby"]
        | 22.to_s #"22"
          "22".to_i #22
          "22 patos".to_i #22
          "gato tem 7 vidas".to_i #0

.step.slide.code[data-x=x_succ data-y=0]
  q
    pre
      code[class="ruby"]
        | 7.5.ceil #8
          7.5.floor #7
          7.5.round #8
          7.4.round #7

.step.slide.code[data-x=x_succ data-y=0]
  q
    pre
      code[class="ruby"]
        | 16.even? #true
          16.odd? #false
          17.even? #false
          17.odd? #true

.step.slide.code[data-x=x_succ data-y=0]
  q
    pre
      code[class="ruby"]
        | 1.succ #2
          99.succ #100
          999.next #1000

.step.slide.code[data-x=x_succ data-y=0]
  q
    pre
      code[class="ruby"]
        | 2 + 2 #4
          3 * 3 #9
          7 - 5 #2
          10 / 2 #5
          7 % 2 #1
          5 ** 2 #25

.step.slide.code[data-x=x_succ data-y=0]
  q
    pre
      code[class="ruby"]
        | 10 / 3 #3
          10 / 3.0
          #3.3333333333333335

.step.slide.code[data-x=x_succ data-y=0]
  q
    pre
      code[class="ruby"]
        | age = 12
          age += 1 #13
          age *= 2 #26
          age -= 10 #16
          age /= 2 #8

.step.slide.exercise[data-x=x_succ data-y=0]
  q Faça um código que arredonde um número qualquer informado pelo usuário.